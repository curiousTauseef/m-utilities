$mGallery-sizes: (
  xs: (
    container-width: 100%,
    container-height: 300px,
    on-img-width: 70%
  ),
  sm: (
    container-width: 100%,
    container-height: 400px,
    on-img-width: 70%
  ),
  md: (
    container-width: 100%,
    container-height: 550px,
    on-img-width: 75%
  ),
  lg: (
    container-width: 100%,
    container-height: 600px,
    on-img-width: 800px
  )
)!default;

$mGallery-img-bg-color: #000!default;
$mGallery-next-img-opacity: .75!default;
$mGallery-next-img-scale: .8!default; // dimensione delle immagini non attive rispetto a quella selezionata
$mGallery-next-img-filter: grayscale(70%)!default;

.mGallery {

  position: relative;
  overflow: hidden;
  z-index:0;
  // width: map-deep-get($mGallery-sizes, xs, container-width);
  // height: map-deep-get($mGallery-sizes, xs, container-height);


  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content:flex-start;
  align-items:center;
  align-content:center;

  text-align: center;

  > div {
    display: inline-block;
    background-color: $mGallery-img-bg-color;
    flex:0;
    position: absolute;
    z-index:1;

    // $next-img-width: map-deep-get($mGallery-sizes, xs, container-width) * $mGallery-next-img-scale;
    // width:$next-img-width;
    // height: map-deep-get($mGallery-sizes, xs, container-height) * $mGallery-next-img-scale;
    transform: none;

    transition: all .3s ease-in-out;

    // elementi a sx
    // &:not(.mgallery-on) {
    //   left: calc( -#{$next-img-width} +
    //     ((#{map-deep-get($mGallery-sizes, xs, container-width)} - #{map-deep-get($mGallery-sizes, xs, on-img-width)}) / 2)
    //   );
    // }

    // // elementi a dx
    // &.mgallery-on ~ div {
    //   left: calc( #{map-deep-get($mGallery-sizes, xs, on-img-width)} +
    //     ((#{map-deep-get($mGallery-sizes, xs, container-width)} - #{map-deep-get($mGallery-sizes, xs, on-img-width)}) / 2)
    //   );
    // }

    &.mgallery-on + div {
      z-index:2;
    }

    &.mgallery-on {
      // width: map-deep-get($mGallery-sizes, xs, on-img-width);

      z-index:3;

      top:50%;
      left:50%;
      transform: translate(-50%, -50%);
      box-shadow: 4px 4px 4px rgba(0,0,0, .7), -4px -4px 4px rgba(0,0,0, .7);

      img {
        opacity:1;
        filter:none;
      }
    }
  }

  img {
    /* NB: l'immagine deve avere dimensioni definite */
    object-fit: cover;
    object-position: center;
    display: inline-block;
    width:100%;
    height: 100%;
    opacity:$mGallery-next-img-opacity;
    filter:$mGallery-next-img-filter;
    cursor: pointer;
  }

  @each $brkpt, $sizes in $mGallery-sizes {
    @include media-breakpoint-up(#{$brkpt}) {

      width: map-deep-get($mGallery-sizes, $brkpt, container-width);
      height: map-deep-get($mGallery-sizes, $brkpt, container-height);

      > div {

        $next-img-width: map-deep-get($mGallery-sizes, $brkpt, container-width) * $mGallery-next-img-scale;
        width:$next-img-width;
        height: map-deep-get($mGallery-sizes, $brkpt, container-height) * $mGallery-next-img-scale;

        // elementi a sx
        &:not(.mgallery-on) {
          left: calc( -#{$next-img-width} +
            ((#{map-deep-get($mGallery-sizes, $brkpt, container-width)} - #{map-deep-get($mGallery-sizes, $brkpt, on-img-width)}) / 2)
          );
        }

        // elementi a dx
        &.mgallery-on ~ div {
          left: calc( #{map-deep-get($mGallery-sizes, $brkpt, on-img-width)} +
            ((#{map-deep-get($mGallery-sizes, $brkpt, container-width)} - #{map-deep-get($mGallery-sizes, $brkpt, on-img-width)}) / 2)
          );
        }

        &.mgallery-on {
          width: map-deep-get($mGallery-sizes, $brkpt, on-img-width);
          height: 100%;

        }
      }
    }
  } // end @media
} // end @each


