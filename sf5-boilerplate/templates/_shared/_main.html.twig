{% apply spaceless %}
{% set glob_vars = {
  vers : {
    top           : '1.0.0',
    backoffice    : '1.0.0',
    icone         : '1.0.0'
  },

  breakpoints: {
    xs: 0,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200
  },

  fonts: ['Work+Sans:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,700', 'Zilla+Slab:wght@300'],
  emailfonts: ['Work+Sans:ital,wght@0,400;0,700;1,400;1,700'],

  icon_file: '/assets/icone/icone.svg',

  chiave_recaptcha_client: 'xxxxx',

  email: {
    info: 'info@xxxx.xxx'
  }

} %}

{# media queries standard: #}
{# NB: la sequenza dei breakpoint è significativa, non modificare l'ordine (dal più piccolo al più grande) #}
{% set glob_vars = glob_vars|merge({ mq: {
  xs: "(max-width: #{glob_vars.breakpoints.sm - 1}px)",
  sm: "(min-width: #{glob_vars.breakpoints.sm}px) and (max-width: #{glob_vars.breakpoints.md - 1}px)",
  md: "(min-width: #{glob_vars.breakpoints.md}px) and (max-width: #{glob_vars.breakpoints.lg - 1}px)",
  lg: "(min-width: #{glob_vars.breakpoints.lg}px) and (max-width: #{glob_vars.breakpoints.xl - 1}px)",
  xl: "(min-width: #{glob_vars.breakpoints.xl}px)"
} }) %}

{% set glob_vars = glob_vars|merge({
  special_mq: {
    xs_sm: "(max-width: #{glob_vars.breakpoints.md - 1}px)",
    xs_md: "(max-width: #{glob_vars.breakpoints.lg - 1}px)",
    md_lg: "(min-width: #{glob_vars.breakpoints.md}px) and (max-width: #{glob_vars.breakpoints.xl - 1}px)",
    md_xl: "(min-width: #{glob_vars.breakpoints.md}px)",
    lg_xl: "(min-width: #{glob_vars.breakpoints.lg}px)"
  },

  icon_file: glob_vars.icon_file ~ '?v=' ~ glob_vars.vers.icone,

}) %}

{# {%- if fancy is not defined -%}
  {% set fancy = is_mdev is defined? fancy is defined : app.request.query.get("fancy") is not null  %}
{%- endif -%} #}
{% endapply %}
{% block tpl %}{% endblock %}
